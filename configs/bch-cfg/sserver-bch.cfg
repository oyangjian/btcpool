#
# stratum server cfg
#
# @since 2016-06
# @copyright btc.com
#

# is using testnet3
testnet = false;

kafka = {
  brokers = "kafka.cluster:9092"; # "10.0.0.1:9092,10.0.0.2:9092,..."

};

zookeeper = {
  brokers = "kafka.cluster:2181"; # "10.0.0.1:2181,10.0.0.2:2181,..."
};

sserver = {
  # serverType
  type = "BCH";
  
  ip = "0.0.0.0";
  port = 3334;

  # should be global unique, range: [1, 255]
  # If the id is 0, try to automatically assign one from zookeeper.
  id = 1;
  # The lock path used when automatically assigning an id
  zookeeper_lock_path = "/locks/sserver_bch";

  # write last mining notify job send time to file, for monitor
  file_last_notify_time = "/work/btcpool/build/run_sserver/sserver_lastnotifytime_bch.txt";

  # the connection will be closed if the miner does not send any message
  # to the sserver within the specified seconds.
  tcp_read_timeout = 600;

  # how many seconds between two share submit
  share_avg_seconds = 10;
  version_mask = 0xffffffff;
  #version_mask2 = "4294967296";
  #version_mask2 = 4294967295;
  version_mask2 = 2147483648;
  #version_mask3 = 2147483648;
  #version_mask3 = 0x80000000;
  version_mask3 = 0xffffffff;

  # the lifetime of a job
  # It should not be too short, otherwise the valid share will be rejected due to job not found.
  max_job_lifetime = 300;  // seconds

  # default difficulty
  default_difficulty = "0x7d00";

  # max difficulty must be hex string
  max_difficulty = "4000000000000000";

  # min difficulty
  min_difficulty = "1024";

  # Adjust difficulty once every N second
  diff_adjust_period = 900;

  # kafaka consumer topic
  job_topic = "BchJob";
  
  # solved share topic
  solved_share_topic = "BchSolvedShare";

  # share topic
  share_topic = "BchShareLog";

  # common events topic
  # example: miner connected, miner disconnected, ...
  common_events_topic = "BchCommonEvents";
  
  ########################## dev options #########################

  # if enable simulator, all share will be accepted. for testing
  enable_simulator = false;

  # if enable it, all share will make block and submit. for testing
  enable_submit_invalid_block = false;

  # if enable, difficulty sent to miners is always dev_fixed_difficulty. for development
  enable_dev_mode = false;

  # difficulty to send to miners. for development
  dev_fixed_difficulty = 0.005;

  rsk_solved_share_topic = "RskSolvedShare";
  auxpow_solved_share_topic = "AuxPowSolvedShare"; # auxpow (eg. Namecoin) solved share topic

  ###################### end of dev options ######################
};

users = {
  #
  # https://example.com/get_user_id_list?last_id=0
  # {"err_no":0,"err_msg":null,"data":{"jack":1,"terry":2}}
  #
  # There is a demo: https://github.com/btccom/btcpool/issues/16#issuecomment-278245381
  #
  list_id_api_url = "https://www.bfcpool.com/pool/stratum/get_user"

  # Make the user name case insensitive
  case_insensitive = true;
  
  # remove the suffix appended to the user name
  # example: tiger_eth -> tiger, aaa_bbb_ccc -> aaa_bbb
  strip_user_suffix = true;
  user_suffix_separator = "_";

  zookeeper_userchain_map = "/sserver/userchain/bitcoin";
  # user auto register
  enable_auto_reg = false;
  auto_reg_max_pending_users = 50;
  zookeeper_auto_reg_watch_dir = "/sserver/autoreg";
};

prometheus = {
  # whether prometheus exporter is enabled
  enabled = true
  # address for prometheus exporter to bind
  address = "0.0.0.0"
  # port for prometheus exporter to bind
  port = 8080
  # path of the prometheus exporter url
  path = "/metrics"
};

management = {
  enabled = false; # default: true

  kafka_brokers = "kafka.cluster:9092"; # "10.0.0.1:9092,10.0.0.2:9092,..."
  controller_topic = "BchManController";
  processor_topic = "BchManProcessor";

  auto_switch_chain = true;
};
